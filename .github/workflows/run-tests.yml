name: Run VOLK tests

on: [push, pull_request]

jobs:
  build-ubuntu:

    strategy:
      matrix:
        compiler: 
          - { name: gcc-7, cc: gcc-7, cxx: g++-7 }
          - { name: gcc-8, cc: gcc-8, cxx: g++-8 }
          - { name: gcc-9, cc: gcc-9, cxx: g++-9 }
          - { name: gcc-10, cc: gcc-10, cxx: g++-10 }
          - { name: clang-7, cc: clang-7, cxx: clang++-7 }
          - { name: clang-8, cc: clang-8, cxx: clang++-8 }
          - { name: clang-9, cc: clang-9, cxx: clang++-9 }
          - { name: clang-10, cc: clang-10, cxx: clang++-10 }
          # - { name: clang-11, cc: clang-11, cxx: clang++-11 }

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: sudo apt install python3-mako liborc-dev ${{ matrix.compiler.name }}
    - name: Checkout submodules
      uses: srt32/git-actions@v0.0.3
      with:
        args: git submodule update --init --recursive
    - name: Configure
      env:
        CC: ${{ matrix.compiler.cc }}
        CXX: ${{ matrix.compiler.cxx }}
      run: mkdir build && cd build && cmake -DCMAKE_CXX_FLAGS="-Werror" ..
    - name: Build
      run: cmake --build build
    - name: Print info
      run: |
        ./build/cpu_features/list_cpu_features
        ./build/apps/volk-config-info --alignment
        ./build/apps/volk-config-info --avail-machines
        ./build/apps/volk-config-info --all-machines
        ./build/apps/volk-config-info --malloc
        ./build/apps/volk-config-info --cc
    - name: Test 
      run: |
        cd build
        ctest -V

  build-ubuntu-static:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: dependencies
      run: sudo apt install python3-mako liborc-dev
    - name: Checkout submodules
      uses: srt32/git-actions@v0.0.3
      with:
        args: git submodule update --init --recursive
    - name: configure
      run: mkdir build && cd build && cmake -DENABLE_STATIC_LIBS=True ..
    - name: build
      run: cmake --build build
    - name: test
      run: cd build && ctest -V

  build-windows:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v1
    - name: dependencies
      run: pip install mako
    - name: Checkout submodules
      run: git submodule update --init --recursive
    - name: configure
      run: mkdir build && cd build && cmake ..
    - name: build
      run: cmake --build build --config Release --target INSTALL
    - name: test
      run: cd build && ctest -V -C Release


  build-macos:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v1
    - name: dependencies
      run: pip3 install mako
    - name: Checkout submodules
      run: git submodule update --init --recursive
    - name: configure
      run: mkdir build && cd build && cmake ..
    - name: build
      run: cmake --build build --config Debug
    - name: test
      run: cd build && ctest -V
