language: cpp

os: linux
dist: bionic

addons:
  apt:
    packages: &common_packages
      - python3-mako
      - liborc-dev
      - libboost-system-dev
      - libboost-filesystem-dev

env:
  global:
    - SDE_VERSION=sde-external-8.35.0-2019-03-11-lin
    - SDE_URL1=https://software.intel.com/protected-download/267266/144917
    - SDE_URL2=https://software.intel.com/system/files/managed/32/db

matrix:
  include:
    # Job 1 ... gcc-7 with Intel SDE
    - name: Linux x86 Intel SDE GCC 7
      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7 CMAKE_ARG=-DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchains/intel-sde.cmake"
      addons: {apt: {sources: "ubuntu-toolchain-r-test", packages: [*common_packages]}}
      cache:
        directories:
          - ${TRAVIS_BUILD_DIR}/cache
      before_script:
        - cd ${TRAVIS_BUILD_DIR} && ./scripts/ci/download_intel_sde.sh
    
    # Job 2 ... gcc-4.8
    - name: Linux x86 GCC 4.8
      dist: trusty
      env: MATRIX_EVAL="CC=gcc-4.8 && CXX=g++-4.8"
      addons: {apt: {packages: [*common_packages, g++-4.8]}}

    # Job 3 ... gcc-5
    - name: Linux x86 GCC 5
      dist: xenial
      env: MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
      addons: {apt: {sources: "ubuntu-toolchain-r-test", packages: [*common_packages, g++-5]}}
    
    # Job 4 ... gcc-6
    - name: Linux x86 GCC 6
      env: MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
      addons: {apt: {sources: "ubuntu-toolchain-r-test", packages: [*common_packages, g++-6]}}
    
    # Job 5 ... gcc-7
    - name: Linux x86 GCC 7 
      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      addons: {apt: {sources: "ubuntu-toolchain-r-test", packages: [*common_packages, g++-7]}}

    # Job 6 ... gcc-8
    - name: Linux x86 GCC 8
      env: MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
      addons: {apt: {sources: "ubuntu-toolchain-r-test", packages: [*common_packages, g++-8]}}
    
    # Job 7 ... ARMv7 cross compile
    - name: Linux ARMv7 Qemu GCC 7
      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7 && BOOST_ROOT=$TRAVIS_BUILD_DIR/cache/boost_1_66_0 && CMAKE_ARG=-DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchains/arm-linux-gnueabihf.cmake"
      addons: {apt: {sources: "ubuntu-toolchain-r-test", packages: [*common_packages, g++-arm-linux-gnueabihf, qemu-user]}}
      cache:
        directories:
          - ${TRAVIS_BUILD_DIR}/cache
      before_script:
        - cd ${TRAVIS_BUILD_DIR} && ./scripts/ci/cross_build_boost.sh "arm" "linux-gnueabihf-g++"
    
    # Job 8 ... ARMv8 (aarch64) cross compile
    - name: Linux ARMv8 (aarch64) Qemu GCC 7
      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7 && BOOST_ROOT=$TRAVIS_BUILD_DIR/cache/boost_1_66_0 && CMAKE_ARG=-DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchains/aarch64-linux-gnu.cmake"
      addons: {apt: {sources: "ubuntu-toolchain-r-test", packages: [*common_packages, g++-aarch64-linux-gnu, qemu-user]}}
      cache:
        directories:
          - ${TRAVIS_BUILD_DIR}/cache
      before_script:
        - cd ${TRAVIS_BUILD_DIR} && ./scripts/ci/cross_build_boost.sh "aarch64" "linux-gnu-g++"
 
    # Job 9 .. clang
    - name: Linux x86 Clang 6
      env: MATRIX_EVAL="CC=\"clang -fprofile-instr-generate -fcoverage-mapping\" && CXX=\"clang++ -fprofile-instr-generate -fcoverage-mapping\""
      addons: {apt: {packages: [*common_packages, ]}}

    - name: Linux ARMv8 (aarch64) GCC 7 
      arch: arm64
      dist: bionic
      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      addons: {apt: {packages: [*common_packages, ]}}

    - name: Linux ARMv8 (aarch64) Clang 6
      dist: bionic
      arch: arm64
      env: MATRIX_EVAL="CC=clang && CXX=clang++"
      addons: {apt: {packages: [*common_packages, ]}}

    - name: Linux ppc64le GCC
      dist: bionic
      arch: ppc64le
      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      addons: {apt: {packages: [*common_packages, ]}}

    - name: Linux ppc64le Clang
      dist: bionic
      arch: ppc64le
      env: MATRIX_EVAL="CC=clang && CXX=clang++"
      addons: {apt: {packages: [*common_packages,]}}

    - name: Linux s390x GCC
      dist: bionic
      arch: s390x
      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      addons: {apt: {packages: [*common_packages, ]}}

    - name: Linux s390x Clang
      dist: bionic
      arch: s390x
      env: MATRIX_EVAL="CC=clang && CXX=clang++"
      addons: {apt: {packages: [*common_packages, ]}}

  allow_failures:
    - arch: s390x
    - arch: ppc64le

script:
  - eval "${MATRIX_EVAL}"
  - lscpu
  - mkdir build && cd build && BOOST_ROOT=$BOOST_ROOT 
  - cmake ${CMAKE_ARG} ../ 
  - make
  - ctest -V


